import sys
import click
from random import randint

from pizza import Margherita, Pepperoni, Hawaiian, Pizza


@click.group()
def cli():
    pass


@cli.command()
@click.option('--delivery', default=False, is_flag=True)
@click.argument('pizza', nargs=1)
def order(pizza: str, delivery: bool) -> None:
    """
    –ì–æ—Ç–æ–≤–∏—Ç –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É
    :param pizza: –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã
    :param delivery: –Ω—É–∂–Ω–∞ –ª–∏ –¥–æ—Å—Ç–∞–≤–∫–∞
    :return:
    """
    # –ù–∞—Ö–æ–¥–∏–º –ø–∏—Ü—Ü—É –Ω–∞ —Å–∫–ª–∞–¥–µ
    try:
        pizza = getattr(sys.modules[__name__], pizza.capitalize())()
    except AttributeError:
        print('–¢–∞–∫–æ–π –ø–∏—Ü—Ü–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ –Ω–µ—Ç!')
        return
    print('–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–∏—Ü—Ü—É: {}'.format(str(pizza)))
    bake_func(pizza)
    if delivery:
        delivery_func(pizza)
    else:
        pickup_func(pizza)


@cli.command()
def menu() -> None:
    """–í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é"""
    pizzas = [Margherita(), Pepperoni(), Hawaiian()]
    for pizza in pizzas:
        print('- {}: {}'.format(
            str(pizza), ', '.join(pizza.ingredients.values()))
        )


def log(fn_or_output):
    """–î–µ–∫–∞—Ä–∞—Ç–æ—Ä"""

    def decorator(fn):
        def wrapper(*args, **kwargs):
            if callable(fn_or_output):
                print('{} - {}c!'.format(fn_or_output.__name__, randint(1, 3)))
            else:
                print(fn_or_output.format(randint(1, 3)))
            return fn(*args, **kwargs)

        return wrapper

    if callable(fn_or_output):
        return decorator(fn_or_output)
    else:
        return decorator


@log
def bake_func(pizza: Pizza):
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""


@log('üõµ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {}—Å!')
def delivery_func(pizza: Pizza):
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""


@log('üè† –ó–∞–±—Ä–∞–ª–∏ –∑–∞ {}—Å!')
def pickup_func(pizza: Pizza):
    """–°–∞–º–æ–≤—ã–≤–æ–∑"""


if __name__ == '__main__':
    cli()
